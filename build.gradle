buildscript {
    repositories {
        jcenter()
        maven { url = "https://www.dimdev.org/maven" }
        maven { url = "http://files.minecraftforge.net/maven" }
        maven { url 'http://repo.spongepowered.org/maven' }
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath 'org.dimdev:ForgeGradle:2.3-SNAPSHOT'
        classpath 'org.spongepowered:mixingradle:0.6-SNAPSHOT'
    }
}

plugins {
    id "com.matthewprenger.cursegradle" version "1.0.9"
}

apply plugin: 'net.minecraftforge.gradle.tweaker-client'
apply plugin: 'java'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'maven-publish'

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

file "build.properties" withReader {
    def prop = new Properties()
    prop.load(it)
    ext.config = new ConfigSlurper().parse prop
}

version = config.mod.version
group = config.mod.group
archivesBaseName = config.mod.name

def getGitRef() {
  try {
    def stdout = new ByteArrayOutputStream()
    exec {
      commandLine 'git', 'rev-parse', '--short', 'HEAD'
      standardOutput = stdout
    }
    return stdout.toString().trim()
  } catch (Throwable e) {
    return "unknown"
  }
}

if (System.getenv("PROMOTED_NUMBER") != null)
    version += ".${System.getenv("PROMOTED_NUMBER")}"
else if (System.getenv("BUILD_NUMBER") != null)
    version += ".${System.getenv("BUILD_NUMBER")}"
else
    version += "+" + getGitRef()

ext.simpleVersion = version
version = "MC${config.minecraft.version}-Rift-${project.version}"

minecraft {
    version = "${config.minecraft.version}"
    runDir = "run"
    tweakClass = 'org.dimdev.riftloader.launch.RiftLoaderClientTweaker'
    mappings = config.minecraft.mappings
    replace "@VERSION@", project.simpleVersion
}

repositories {
    mavenCentral()
    maven { url 'https://www.dimdev.org/maven/' }
    ivy {
        artifactPattern "http://asie.pl/javadeps/proto/[module]-[revision](-[classifier]).[ext]"
    }
}

dependencies {
    implementation 'org.dimdev:rift:1.0.3-45:dev'
    compile name: "Jankson", version: "0.0.3"
    compile name: "JanksonShadowed", version: "0.0.3"
    compile name: "ProtoCharset", version: "0.0.3-deobf"
}

mixin {
    defaultObfuscationEnv notch
    add sourceSets.main, 'mixins.tis3d.refmap.json'
}

processResources {
    inputs.property "version", project.simpleVersion
    inputs.property "mcversion", project.minecraft.version
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        expand 'version':project.simpleVersion, 'mcversion':project.minecraft.version, 'fversion':config.forge.version
    }
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

task apiJar(type: Jar) {
    from sourceSets.main.allSource
    from sourceSets.main.output
    classifier = 'api'
    include 'li/cil/tis3d/api/**'
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    from javadoc.destinationDir
    classifier 'javadoc'
}

artifacts {
    archives javadocJar
    archives apiJar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
            artifact javadocJar
            artifact apiJar
        }
    }
    repositories {
        maven {
            url System.getenv("MAVEN_PATH")
        }
    }
}

curseforge {
    apiKey = project.hasProperty("curseForgeApiKey") ? project.curseForgeApiKey : ""
    project {
        id = config.curse.project.id
        releaseType = config.curse.project.releaseType
        changelogType = "markdown"
        changelog = file("changelog.md")
        addGameVersion config.minecraft.version
        addGameVersion "Java 8"
    }
}

// this is needed for IntelliJ so we don't have to copy over the assets manually every time
idea {
    module {
        outputDir = file('build/classes/main')
    }
}
